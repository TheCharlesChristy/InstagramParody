{"ast":null,"code":"'use strict';\n\n/**\n * Copyright (c) 2010-2017 Brian Carlson (brian.m.carlson@gmail.com)\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * README.md file in the root directory of this source tree.\n */\nvar Client = require('./client');\nvar defaults = require('./defaults');\nvar Connection = require('./connection');\nvar Pool = require('pg-pool');\nconst poolFactory = Client => {\n  return class BoundPool extends Pool {\n    constructor(options) {\n      super(options, Client);\n    }\n  };\n};\nvar PG = function (clientConstructor) {\n  this.defaults = defaults;\n  this.Client = clientConstructor;\n  this.Query = this.Client.Query;\n  this.Pool = poolFactory(this.Client);\n  this._pools = [];\n  this.Connection = Connection;\n  this.types = require('pg-types');\n};\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\n  module.exports = new PG(require('./native'));\n} else {\n  module.exports = new PG(Client);\n\n  // lazy require native module...the native module may not have installed\n  Object.defineProperty(module.exports, 'native', {\n    configurable: true,\n    enumerable: false,\n    get() {\n      var native = null;\n      try {\n        native = new PG(require('./native'));\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err;\n        }\n        /* eslint-disable no-console */\n        console.error(err.message);\n        /* eslint-enable no-console */\n      }\n\n      // overwrite module.exports.native so that getter is never called again\n      Object.defineProperty(module.exports, 'native', {\n        value: native\n      });\n      return native;\n    }\n  });\n}","map":{"version":3,"names":["Client","require","defaults","Connection","Pool","poolFactory","BoundPool","constructor","options","PG","clientConstructor","Query","_pools","types","process","env","NODE_PG_FORCE_NATIVE","module","exports","Object","defineProperty","configurable","enumerable","get","native","err","code","console","error","message","value"],"sources":["C:/Users/Charles/Desktop/Projects/InstagramParody/instagram-frontend/node_modules/pg/lib/index.js"],"sourcesContent":["'use strict'\n/**\n * Copyright (c) 2010-2017 Brian Carlson (brian.m.carlson@gmail.com)\n * All rights reserved.\n *\n * This source code is licensed under the MIT license found in the\n * README.md file in the root directory of this source tree.\n */\n\nvar Client = require('./client')\nvar defaults = require('./defaults')\nvar Connection = require('./connection')\nvar Pool = require('pg-pool')\n\nconst poolFactory = (Client) => {\n  return class BoundPool extends Pool {\n    constructor(options) {\n      super(options, Client)\n    }\n  }\n}\n\nvar PG = function (clientConstructor) {\n  this.defaults = defaults\n  this.Client = clientConstructor\n  this.Query = this.Client.Query\n  this.Pool = poolFactory(this.Client)\n  this._pools = []\n  this.Connection = Connection\n  this.types = require('pg-types')\n}\n\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\n  module.exports = new PG(require('./native'))\n} else {\n  module.exports = new PG(Client)\n\n  // lazy require native module...the native module may not have installed\n  Object.defineProperty(module.exports, 'native', {\n    configurable: true,\n    enumerable: false,\n    get() {\n      var native = null\n      try {\n        native = new PG(require('./native'))\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err\n        }\n        /* eslint-disable no-console */\n        console.error(err.message)\n        /* eslint-enable no-console */\n      }\n\n      // overwrite module.exports.native so that getter is never called again\n      Object.defineProperty(module.exports, 'native', {\n        value: native,\n      })\n\n      return native\n    },\n  })\n}\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;AACpC,IAAIE,UAAU,GAAGF,OAAO,CAAC,cAAc,CAAC;AACxC,IAAIG,IAAI,GAAGH,OAAO,CAAC,SAAS,CAAC;AAE7B,MAAMI,WAAW,GAAIL,MAAM,IAAK;EAC9B,OAAO,MAAMM,SAAS,SAASF,IAAI,CAAC;IAClCG,WAAWA,CAACC,OAAO,EAAE;MACnB,KAAK,CAACA,OAAO,EAAER,MAAM,CAAC;IACxB;EACF,CAAC;AACH,CAAC;AAED,IAAIS,EAAE,GAAG,SAAAA,CAAUC,iBAAiB,EAAE;EACpC,IAAI,CAACR,QAAQ,GAAGA,QAAQ;EACxB,IAAI,CAACF,MAAM,GAAGU,iBAAiB;EAC/B,IAAI,CAACC,KAAK,GAAG,IAAI,CAACX,MAAM,CAACW,KAAK;EAC9B,IAAI,CAACP,IAAI,GAAGC,WAAW,CAAC,IAAI,CAACL,MAAM,CAAC;EACpC,IAAI,CAACY,MAAM,GAAG,EAAE;EAChB,IAAI,CAACT,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACU,KAAK,GAAGZ,OAAO,CAAC,UAAU,CAAC;AAClC,CAAC;AAED,IAAI,OAAOa,OAAO,CAACC,GAAG,CAACC,oBAAoB,KAAK,WAAW,EAAE;EAC3DC,MAAM,CAACC,OAAO,GAAG,IAAIT,EAAE,CAACR,OAAO,CAAC,UAAU,CAAC,CAAC;AAC9C,CAAC,MAAM;EACLgB,MAAM,CAACC,OAAO,GAAG,IAAIT,EAAE,CAACT,MAAM,CAAC;;EAE/B;EACAmB,MAAM,CAACC,cAAc,CAACH,MAAM,CAACC,OAAO,EAAE,QAAQ,EAAE;IAC9CG,YAAY,EAAE,IAAI;IAClBC,UAAU,EAAE,KAAK;IACjBC,GAAGA,CAAA,EAAG;MACJ,IAAIC,MAAM,GAAG,IAAI;MACjB,IAAI;QACFA,MAAM,GAAG,IAAIf,EAAE,CAACR,OAAO,CAAC,UAAU,CAAC,CAAC;MACtC,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACZ,IAAIA,GAAG,CAACC,IAAI,KAAK,kBAAkB,EAAE;UACnC,MAAMD,GAAG;QACX;QACA;QACAE,OAAO,CAACC,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;QAC1B;MACF;;MAEA;MACAV,MAAM,CAACC,cAAc,CAACH,MAAM,CAACC,OAAO,EAAE,QAAQ,EAAE;QAC9CY,KAAK,EAAEN;MACT,CAAC,CAAC;MAEF,OAAOA,MAAM;IACf;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}