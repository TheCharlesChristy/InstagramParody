{"ast":null,"code":";\n(function (exports) {\n  // export the class if we are in a Node-like system.\n  if (typeof module === 'object' && module.exports === exports) exports = module.exports = SemVer;\n\n  // The debug function is excluded entirely from the minified version.\n\n  // Note: this is the semver.org version of the spec that it implements\n  // Not necessarily the package version of this code.\n  exports.SEMVER_SPEC_VERSION = '2.0.0';\n  var MAX_LENGTH = 256;\n  var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n  // The actual regexps go on exports.re\n  var re = exports.re = [];\n  var src = exports.src = [];\n  var R = 0;\n\n  // The following Regular Expressions can be used for tokenizing,\n  // validating, and parsing SemVer version strings.\n\n  // ## Numeric Identifier\n  // A single `0`, or a non-zero digit followed by zero or more digits.\n\n  var NUMERICIDENTIFIER = R++;\n  src[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\n  var NUMERICIDENTIFIERLOOSE = R++;\n  src[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n  // ## Non-numeric Identifier\n  // Zero or more digits, followed by a letter or hyphen, and then zero or\n  // more letters, digits, or hyphens.\n\n  var NONNUMERICIDENTIFIER = R++;\n  src[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n  // ## Main Version\n  // Three dot-separated numeric identifiers.\n\n  var MAINVERSION = R++;\n  src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')\\\\.' + '(' + src[NUMERICIDENTIFIER] + ')';\n  var MAINVERSIONLOOSE = R++;\n  src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' + '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n  // ## Pre-release Version Identifier\n  // A numeric identifier, or a non-numeric identifier.\n\n  var PRERELEASEIDENTIFIER = R++;\n  src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] + '|' + src[NONNUMERICIDENTIFIER] + ')';\n  var PRERELEASEIDENTIFIERLOOSE = R++;\n  src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] + '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n  // ## Pre-release Version\n  // Hyphen, followed by one or more dot-separated pre-release version\n  // identifiers.\n\n  var PRERELEASE = R++;\n  src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] + '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n  var PRERELEASELOOSE = R++;\n  src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] + '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n  // ## Build Metadata Identifier\n  // Any combination of digits, letters, or hyphens.\n\n  var BUILDIDENTIFIER = R++;\n  src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n  // ## Build Metadata\n  // Plus sign, followed by one or more period-separated build metadata\n  // identifiers.\n\n  var BUILD = R++;\n  src[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] + '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n  // ## Full Version String\n  // A main version, followed optionally by a pre-release version and\n  // build metadata.\n\n  // Note that the only major, minor, patch, and pre-release sections of\n  // the version string are capturing groups.  The build metadata is not a\n  // capturing group, because it should not ever be used in version\n  // comparison.\n\n  var FULL = R++;\n  var FULLPLAIN = 'v?' + src[MAINVERSION] + src[PRERELEASE] + '?' + src[BUILD] + '?';\n  src[FULL] = '^' + FULLPLAIN + '$';\n\n  // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n  // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n  // common in the npm registry.\n  var LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] + src[PRERELEASELOOSE] + '?' + src[BUILD] + '?';\n  var LOOSE = R++;\n  src[LOOSE] = '^' + LOOSEPLAIN + '$';\n  var GTLT = R++;\n  src[GTLT] = '((?:<|>)?=?)';\n\n  // Something like \"2.*\" or \"1.2.x\".\n  // Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n  // Only the first item is strictly required.\n  var XRANGEIDENTIFIERLOOSE = R++;\n  src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\n  var XRANGEIDENTIFIER = R++;\n  src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n  var XRANGEPLAIN = R++;\n  src[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' + '(?:' + src[PRERELEASE] + ')?' + src[BUILD] + '?' + ')?)?';\n  var XRANGEPLAINLOOSE = R++;\n  src[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' + '(?:' + src[PRERELEASELOOSE] + ')?' + src[BUILD] + '?' + ')?)?';\n  var XRANGE = R++;\n  src[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\n  var XRANGELOOSE = R++;\n  src[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n  // Tilde ranges.\n  // Meaning is \"reasonably at or greater than\"\n  var LONETILDE = R++;\n  src[LONETILDE] = '(?:~>?)';\n  var TILDETRIM = R++;\n  src[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\n  re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\n  var tildeTrimReplace = '$1~';\n  var TILDE = R++;\n  src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\n  var TILDELOOSE = R++;\n  src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n  // Caret ranges.\n  // Meaning is \"at least and backwards compatible with\"\n  var LONECARET = R++;\n  src[LONECARET] = '(?:\\\\^)';\n  var CARETTRIM = R++;\n  src[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\n  re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\n  var caretTrimReplace = '$1^';\n  var CARET = R++;\n  src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\n  var CARETLOOSE = R++;\n  src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n  // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n  var COMPARATORLOOSE = R++;\n  src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\n  var COMPARATOR = R++;\n  src[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n  // An expression to strip any whitespace between the gtlt and the thing\n  // it modifies, so that `> 1.2.3` ==> `>1.2.3`\n  var COMPARATORTRIM = R++;\n  src[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n  // this one has to use the /g flag\n  re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\n  var comparatorTrimReplace = '$1$2$3';\n\n  // Something like `1.2.3 - 1.2.4`\n  // Note that these all use the loose form, because they'll be\n  // checked against either the strict or loose comparator form\n  // later.\n  var HYPHENRANGE = R++;\n  src[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAIN] + ')' + '\\\\s*$';\n  var HYPHENRANGELOOSE = R++;\n  src[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s+-\\\\s+' + '(' + src[XRANGEPLAINLOOSE] + ')' + '\\\\s*$';\n\n  // Star ranges basically just allow anything at all.\n  var STAR = R++;\n  src[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n  // Compile to actual regexp objects.\n  // All are flag-free, unless they were created above with a flag.\n  for (var i = 0; i < R; i++) {\n    ;\n    if (!re[i]) re[i] = new RegExp(src[i]);\n  }\n  exports.parse = parse;\n  function parse(version, loose) {\n    if (version.length > MAX_LENGTH) return null;\n    var r = loose ? re[LOOSE] : re[FULL];\n    if (!r.test(version)) return null;\n    try {\n      return new SemVer(version, loose);\n    } catch (er) {\n      return null;\n    }\n  }\n  exports.valid = valid;\n  function valid(version, loose) {\n    var v = parse(version, loose);\n    return v ? v.version : null;\n  }\n  exports.clean = clean;\n  function clean(version, loose) {\n    var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n    return s ? s.version : null;\n  }\n  exports.SemVer = SemVer;\n  function SemVer(version, loose) {\n    if (version instanceof SemVer) {\n      if (version.loose === loose) return version;else version = version.version;\n    } else if (typeof version !== 'string') {\n      throw new TypeError('Invalid Version: ' + version);\n    }\n    if (version.length > MAX_LENGTH) throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters');\n    if (!(this instanceof SemVer)) return new SemVer(version, loose);\n    ;\n    this.loose = loose;\n    var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n    if (!m) throw new TypeError('Invalid Version: ' + version);\n    this.raw = version;\n\n    // these are actually numbers\n    this.major = +m[1];\n    this.minor = +m[2];\n    this.patch = +m[3];\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) throw new TypeError('Invalid major version');\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) throw new TypeError('Invalid minor version');\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) throw new TypeError('Invalid patch version');\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) this.prerelease = [];else this.prerelease = m[4].split('.').map(function (id) {\n      return /^[0-9]+$/.test(id) ? +id : id;\n    });\n    this.build = m[5] ? m[5].split('.') : [];\n    this.format();\n  }\n  SemVer.prototype.format = function () {\n    this.version = this.major + '.' + this.minor + '.' + this.patch;\n    if (this.prerelease.length) this.version += '-' + this.prerelease.join('.');\n    return this.version;\n  };\n  SemVer.prototype.inspect = function () {\n    return '<SemVer \"' + this + '\">';\n  };\n  SemVer.prototype.toString = function () {\n    return this.version;\n  };\n  SemVer.prototype.compare = function (other) {\n    ;\n    if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n    return this.compareMain(other) || this.comparePre(other);\n  };\n  SemVer.prototype.compareMain = function (other) {\n    if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n    return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n  };\n  SemVer.prototype.comparePre = function (other) {\n    if (!(other instanceof SemVer)) other = new SemVer(other, this.loose);\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) return -1;else if (!this.prerelease.length && other.prerelease.length) return 1;else if (!this.prerelease.length && !other.prerelease.length) return 0;\n    var i = 0;\n    do {\n      var a = this.prerelease[i];\n      var b = other.prerelease[i];\n      ;\n      if (a === undefined && b === undefined) return 0;else if (b === undefined) return 1;else if (a === undefined) return -1;else if (a === b) continue;else return compareIdentifiers(a, b);\n    } while (++i);\n  };\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  SemVer.prototype.inc = function (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0;\n        this.patch = 0;\n        this.minor = 0;\n        this.major++;\n        this.inc('pre', identifier);\n        break;\n      case 'preminor':\n        this.prerelease.length = 0;\n        this.patch = 0;\n        this.minor++;\n        this.inc('pre', identifier);\n        break;\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0;\n        this.inc('patch', identifier);\n        this.inc('pre', identifier);\n        break;\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) this.inc('patch', identifier);\n        this.inc('pre', identifier);\n        break;\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) this.major++;\n        this.minor = 0;\n        this.patch = 0;\n        this.prerelease = [];\n        break;\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) this.minor++;\n        this.patch = 0;\n        this.prerelease = [];\n        break;\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) this.patch++;\n        this.prerelease = [];\n        break;\n      // This probably shouldn't be used publicly.\n      // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) this.prerelease = [0];else {\n          var i = this.prerelease.length;\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++;\n              i = -2;\n            }\n          }\n          if (i === -1)\n            // didn't increment anything\n            this.prerelease.push(0);\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (this.prerelease[0] === identifier) {\n            if (isNaN(this.prerelease[1])) this.prerelease = [identifier, 0];\n          } else this.prerelease = [identifier, 0];\n        }\n        break;\n      default:\n        throw new Error('invalid increment argument: ' + release);\n    }\n    this.format();\n    return this;\n  };\n  exports.inc = inc;\n  function inc(version, release, loose, identifier) {\n    if (typeof loose === 'string') {\n      identifier = loose;\n      loose = undefined;\n    }\n    try {\n      return new SemVer(version, loose).inc(release, identifier).version;\n    } catch (er) {\n      return null;\n    }\n  }\n  exports.diff = diff;\n  function diff(version1, version2) {\n    if (eq(version1, version2)) {\n      return null;\n    } else {\n      var v1 = parse(version1);\n      var v2 = parse(version2);\n      if (v1.prerelease.length || v2.prerelease.length) {\n        for (var key in v1) {\n          if (key === 'major' || key === 'minor' || key === 'patch') {\n            if (v1[key] !== v2[key]) {\n              return 'pre' + key;\n            }\n          }\n        }\n        return 'prerelease';\n      }\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return key;\n          }\n        }\n      }\n    }\n  }\n  exports.compareIdentifiers = compareIdentifiers;\n  var numeric = /^[0-9]+$/;\n  function compareIdentifiers(a, b) {\n    var anum = numeric.test(a);\n    var bnum = numeric.test(b);\n    if (anum && bnum) {\n      a = +a;\n      b = +b;\n    }\n    return anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : a > b ? 1 : 0;\n  }\n  exports.rcompareIdentifiers = rcompareIdentifiers;\n  function rcompareIdentifiers(a, b) {\n    return compareIdentifiers(b, a);\n  }\n  exports.major = major;\n  function major(a, loose) {\n    return new SemVer(a, loose).major;\n  }\n  exports.minor = minor;\n  function minor(a, loose) {\n    return new SemVer(a, loose).minor;\n  }\n  exports.patch = patch;\n  function patch(a, loose) {\n    return new SemVer(a, loose).patch;\n  }\n  exports.compare = compare;\n  function compare(a, b, loose) {\n    return new SemVer(a, loose).compare(b);\n  }\n  exports.compareLoose = compareLoose;\n  function compareLoose(a, b) {\n    return compare(a, b, true);\n  }\n  exports.rcompare = rcompare;\n  function rcompare(a, b, loose) {\n    return compare(b, a, loose);\n  }\n  exports.sort = sort;\n  function sort(list, loose) {\n    return list.sort(function (a, b) {\n      return exports.compare(a, b, loose);\n    });\n  }\n  exports.rsort = rsort;\n  function rsort(list, loose) {\n    return list.sort(function (a, b) {\n      return exports.rcompare(a, b, loose);\n    });\n  }\n  exports.gt = gt;\n  function gt(a, b, loose) {\n    return compare(a, b, loose) > 0;\n  }\n  exports.lt = lt;\n  function lt(a, b, loose) {\n    return compare(a, b, loose) < 0;\n  }\n  exports.eq = eq;\n  function eq(a, b, loose) {\n    return compare(a, b, loose) === 0;\n  }\n  exports.neq = neq;\n  function neq(a, b, loose) {\n    return compare(a, b, loose) !== 0;\n  }\n  exports.gte = gte;\n  function gte(a, b, loose) {\n    return compare(a, b, loose) >= 0;\n  }\n  exports.lte = lte;\n  function lte(a, b, loose) {\n    return compare(a, b, loose) <= 0;\n  }\n  exports.cmp = cmp;\n  function cmp(a, op, b, loose) {\n    var ret;\n    switch (op) {\n      case '===':\n        if (typeof a === 'object') a = a.version;\n        if (typeof b === 'object') b = b.version;\n        ret = a === b;\n        break;\n      case '!==':\n        if (typeof a === 'object') a = a.version;\n        if (typeof b === 'object') b = b.version;\n        ret = a !== b;\n        break;\n      case '':\n      case '=':\n      case '==':\n        ret = eq(a, b, loose);\n        break;\n      case '!=':\n        ret = neq(a, b, loose);\n        break;\n      case '>':\n        ret = gt(a, b, loose);\n        break;\n      case '>=':\n        ret = gte(a, b, loose);\n        break;\n      case '<':\n        ret = lt(a, b, loose);\n        break;\n      case '<=':\n        ret = lte(a, b, loose);\n        break;\n      default:\n        throw new TypeError('Invalid operator: ' + op);\n    }\n    return ret;\n  }\n  exports.Comparator = Comparator;\n  function Comparator(comp, loose) {\n    if (comp instanceof Comparator) {\n      if (comp.loose === loose) return comp;else comp = comp.value;\n    }\n    if (!(this instanceof Comparator)) return new Comparator(comp, loose);\n    ;\n    this.loose = loose;\n    this.parse(comp);\n    if (this.semver === ANY) this.value = '';else this.value = this.operator + this.semver.version;\n    ;\n  }\n  var ANY = {};\n  Comparator.prototype.parse = function (comp) {\n    var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n    var m = comp.match(r);\n    if (!m) throw new TypeError('Invalid comparator: ' + comp);\n    this.operator = m[1];\n    if (this.operator === '=') this.operator = '';\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) this.semver = ANY;else this.semver = new SemVer(m[2], this.loose);\n  };\n  Comparator.prototype.inspect = function () {\n    return '<SemVer Comparator \"' + this + '\">';\n  };\n  Comparator.prototype.toString = function () {\n    return this.value;\n  };\n  Comparator.prototype.test = function (version) {\n    ;\n    if (this.semver === ANY) return true;\n    if (typeof version === 'string') version = new SemVer(version, this.loose);\n    return cmp(version, this.operator, this.semver, this.loose);\n  };\n  exports.Range = Range;\n  function Range(range, loose) {\n    if (range instanceof Range && range.loose === loose) return range;\n    if (!(this instanceof Range)) return new Range(range, loose);\n    this.loose = loose;\n\n    // First, split based on boolean or ||\n    this.raw = range;\n    this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n      return this.parseRange(range.trim());\n    }, this).filter(function (c) {\n      // throw out any that are not relevant for whatever reason\n      return c.length;\n    });\n    if (!this.set.length) {\n      throw new TypeError('Invalid SemVer Range: ' + range);\n    }\n    this.format();\n  }\n  Range.prototype.inspect = function () {\n    return '<SemVer Range \"' + this.range + '\">';\n  };\n  Range.prototype.format = function () {\n    this.range = this.set.map(function (comps) {\n      return comps.join(' ').trim();\n    }).join('||').trim();\n    return this.range;\n  };\n  Range.prototype.toString = function () {\n    return this.range;\n  };\n  Range.prototype.parseRange = function (range) {\n    var loose = this.loose;\n    range = range.trim();\n    ;\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n    range = range.replace(hr, hyphenReplace);\n    ;\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n    ;\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ');\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n    var set = range.split(' ').map(function (comp) {\n      return parseComparator(comp, loose);\n    }).join(' ').split(/\\s+/);\n    if (this.loose) {\n      // in loose mode, throw out any that are not valid comparators\n      set = set.filter(function (comp) {\n        return !!comp.match(compRe);\n      });\n    }\n    set = set.map(function (comp) {\n      return new Comparator(comp, loose);\n    });\n    return set;\n  };\n\n  // Mostly just for testing and legacy API reasons\n  exports.toComparators = toComparators;\n  function toComparators(range, loose) {\n    return new Range(range, loose).set.map(function (comp) {\n      return comp.map(function (c) {\n        return c.value;\n      }).join(' ').trim().split(' ');\n    });\n  }\n\n  // comprised of xranges, tildes, stars, and gtlt's at this point.\n  // already replaced the hyphen ranges\n  // turn into a set of JUST comparators.\n  function parseComparator(comp, loose) {\n    ;\n    comp = replaceCarets(comp, loose);\n    ;\n    comp = replaceTildes(comp, loose);\n    ;\n    comp = replaceXRanges(comp, loose);\n    ;\n    comp = replaceStars(comp, loose);\n    ;\n    return comp;\n  }\n  function isX(id) {\n    return !id || id.toLowerCase() === 'x' || id === '*';\n  }\n\n  // ~, ~> --> * (any, kinda silly)\n  // ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n  // ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n  // ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n  // ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n  // ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\n  function replaceTildes(comp, loose) {\n    return comp.trim().split(/\\s+/).map(function (comp) {\n      return replaceTilde(comp, loose);\n    }).join(' ');\n  }\n  function replaceTilde(comp, loose) {\n    var r = loose ? re[TILDELOOSE] : re[TILDE];\n    return comp.replace(r, function (_, M, m, p, pr) {\n      ;\n      var ret;\n      if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p))\n        // ~1.2 == >=1.2.0- <1.3.0-\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else if (pr) {\n        ;\n        if (pr.charAt(0) !== '-') pr = '-' + pr;\n        ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        // ~1.2.3 == >=1.2.3 <1.3.0\n        ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n      ;\n      return ret;\n    });\n  }\n\n  // ^ --> * (any, kinda silly)\n  // ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n  // ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n  // ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n  // ^1.2.3 --> >=1.2.3 <2.0.0\n  // ^1.2.0 --> >=1.2.0 <2.0.0\n  function replaceCarets(comp, loose) {\n    return comp.trim().split(/\\s+/).map(function (comp) {\n      return replaceCaret(comp, loose);\n    }).join(' ');\n  }\n  function replaceCaret(comp, loose) {\n    ;\n    var r = loose ? re[CARETLOOSE] : re[CARET];\n    return comp.replace(r, function (_, M, m, p, pr) {\n      ;\n      var ret;\n      if (isX(M)) ret = '';else if (isX(m)) ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';else if (isX(p)) {\n        if (M === '0') ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';else ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n      } else if (pr) {\n        ;\n        if (pr.charAt(0) !== '-') pr = '-' + pr;\n        if (M === '0') {\n          if (m === '0') ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + M + '.' + (+m + 1) + '.0';\n        } else ret = '>=' + M + '.' + m + '.' + p + pr + ' <' + (+M + 1) + '.0.0';\n      } else {\n        ;\n        if (M === '0') {\n          if (m === '0') ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + m + '.' + (+p + 1);else ret = '>=' + M + '.' + m + '.' + p + ' <' + M + '.' + (+m + 1) + '.0';\n        } else ret = '>=' + M + '.' + m + '.' + p + ' <' + (+M + 1) + '.0.0';\n      }\n      ;\n      return ret;\n    });\n  }\n  function replaceXRanges(comp, loose) {\n    ;\n    return comp.split(/\\s+/).map(function (comp) {\n      return replaceXRange(comp, loose);\n    }).join(' ');\n  }\n  function replaceXRange(comp, loose) {\n    comp = comp.trim();\n    var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n    return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n      ;\n      var xM = isX(M);\n      var xm = xM || isX(m);\n      var xp = xm || isX(p);\n      var anyX = xp;\n      if (gtlt === '=' && anyX) gtlt = '';\n      if (xM) {\n        if (gtlt === '>' || gtlt === '<') {\n          // nothing is allowed\n          ret = '<0.0.0';\n        } else {\n          // nothing is forbidden\n          ret = '*';\n        }\n      } else if (gtlt && anyX) {\n        // replace X with 0\n        if (xm) m = 0;\n        if (xp) p = 0;\n        if (gtlt === '>') {\n          // >1 => >=2.0.0\n          // >1.2 => >=1.3.0\n          // >1.2.3 => >= 1.2.4\n          gtlt = '>=';\n          if (xm) {\n            M = +M + 1;\n            m = 0;\n            p = 0;\n          } else if (xp) {\n            m = +m + 1;\n            p = 0;\n          }\n        } else if (gtlt === '<=') {\n          // <=0.7.x is actually <0.8.0, since any 0.7.x should\n          // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n          gtlt = '<';\n          if (xm) M = +M + 1;else m = +m + 1;\n        }\n        ret = gtlt + M + '.' + m + '.' + p;\n      } else if (xm) {\n        ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n      } else if (xp) {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      }\n      ;\n      return ret;\n    });\n  }\n\n  // Because * is AND-ed with everything else in the comparator,\n  // and '' means \"any version\", just remove the *s entirely.\n  function replaceStars(comp, loose) {\n    ;\n    // Looseness is ignored here.  star is always as loose as it gets!\n    return comp.trim().replace(re[STAR], '');\n  }\n\n  // This function is passed to string.replace(re[HYPHENRANGE])\n  // M, m, patch, prerelease, build\n  // 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n  // 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n  // 1.2 - 3.4 => >=1.2.0 <3.5.0\n  function hyphenReplace($0, from, fM, fm, fp, fpr, fb, to, tM, tm, tp, tpr, tb) {\n    if (isX(fM)) from = '';else if (isX(fm)) from = '>=' + fM + '.0.0';else if (isX(fp)) from = '>=' + fM + '.' + fm + '.0';else from = '>=' + from;\n    if (isX(tM)) to = '';else if (isX(tm)) to = '<' + (+tM + 1) + '.0.0';else if (isX(tp)) to = '<' + tM + '.' + (+tm + 1) + '.0';else if (tpr) to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;else to = '<=' + to;\n    return (from + ' ' + to).trim();\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  Range.prototype.test = function (version) {\n    if (!version) return false;\n    if (typeof version === 'string') version = new SemVer(version, this.loose);\n    for (var i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version)) return true;\n    }\n    return false;\n  };\n  function testSet(set, version) {\n    for (var i = 0; i < set.length; i++) {\n      if (!set[i].test(version)) return false;\n    }\n    if (version.prerelease.length) {\n      // Find the set of versions that are allowed to have prereleases\n      // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n      // That should allow `1.2.3-pr.2` to pass.\n      // However, `1.2.4-alpha.notready` should NOT be allowed,\n      // even though it's within the range set by the comparators.\n      for (var i = 0; i < set.length; i++) {\n        ;\n        if (set[i].semver === ANY) return true;\n        if (set[i].semver.prerelease.length > 0) {\n          var allowed = set[i].semver;\n          if (allowed.major === version.major && allowed.minor === version.minor && allowed.patch === version.patch) return true;\n        }\n      }\n\n      // Version has a -pre, but it's not one of the ones we like.\n      return false;\n    }\n    return true;\n  }\n  exports.satisfies = satisfies;\n  function satisfies(version, range, loose) {\n    try {\n      range = new Range(range, loose);\n    } catch (er) {\n      return false;\n    }\n    return range.test(version);\n  }\n  exports.maxSatisfying = maxSatisfying;\n  function maxSatisfying(versions, range, loose) {\n    return versions.filter(function (version) {\n      return satisfies(version, range, loose);\n    }).sort(function (a, b) {\n      return rcompare(a, b, loose);\n    })[0] || null;\n  }\n  exports.validRange = validRange;\n  function validRange(range, loose) {\n    try {\n      // Return '*' instead of '' so that truthiness works.\n      // This will throw if it's invalid anyway\n      return new Range(range, loose).range || '*';\n    } catch (er) {\n      return null;\n    }\n  }\n\n  // Determine if version is less than all the versions possible in the range\n  exports.ltr = ltr;\n  function ltr(version, range, loose) {\n    return outside(version, range, '<', loose);\n  }\n\n  // Determine if version is greater than all the versions possible in the range.\n  exports.gtr = gtr;\n  function gtr(version, range, loose) {\n    return outside(version, range, '>', loose);\n  }\n  exports.outside = outside;\n  function outside(version, range, hilo, loose) {\n    version = new SemVer(version, loose);\n    range = new Range(range, loose);\n    var gtfn, ltefn, ltfn, comp, ecomp;\n    switch (hilo) {\n      case '>':\n        gtfn = gt;\n        ltefn = lte;\n        ltfn = lt;\n        comp = '>';\n        ecomp = '>=';\n        break;\n      case '<':\n        gtfn = lt;\n        ltefn = gte;\n        ltfn = gt;\n        comp = '<';\n        ecomp = '<=';\n        break;\n      default:\n        throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n    }\n\n    // If it satisifes the range it is not outside\n    if (satisfies(version, range, loose)) {\n      return false;\n    }\n\n    // From now on, variable terms are as if we're in \"gtr\" mode.\n    // but note that everything is flipped for the \"ltr\" function.\n\n    for (var i = 0; i < range.set.length; ++i) {\n      var comparators = range.set[i];\n      var high = null;\n      var low = null;\n      comparators.forEach(function (comparator) {\n        high = high || comparator;\n        low = low || comparator;\n        if (gtfn(comparator.semver, high.semver, loose)) {\n          high = comparator;\n        } else if (ltfn(comparator.semver, low.semver, loose)) {\n          low = comparator;\n        }\n      });\n\n      // If the edge version comparator has a operator then our version\n      // isn't outside it\n      if (high.operator === comp || high.operator === ecomp) {\n        return false;\n      }\n\n      // If the lowest version comparator has an operator and our version\n      // is less than it then it isn't higher than the range\n      if ((!low.operator || low.operator === comp) && ltefn(version, low.semver)) {\n        return false;\n      } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // Use the define() function if we're in AMD land\n  if (typeof define === 'function' && define.amd) define(exports);\n})(typeof exports === 'object' ? exports : typeof define === 'function' && define.amd ? {} : semver = {});","map":{"version":3,"names":["exports","module","SemVer","SEMVER_SPEC_VERSION","MAX_LENGTH","MAX_SAFE_INTEGER","Number","re","src","R","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","MAINVERSION","MAINVERSIONLOOSE","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","PRERELEASE","PRERELEASELOOSE","BUILDIDENTIFIER","BUILD","FULL","FULLPLAIN","LOOSEPLAIN","LOOSE","GTLT","XRANGEIDENTIFIERLOOSE","XRANGEIDENTIFIER","XRANGEPLAIN","XRANGEPLAINLOOSE","XRANGE","XRANGELOOSE","LONETILDE","TILDETRIM","RegExp","tildeTrimReplace","TILDE","TILDELOOSE","LONECARET","CARETTRIM","caretTrimReplace","CARET","CARETLOOSE","COMPARATORLOOSE","COMPARATOR","COMPARATORTRIM","comparatorTrimReplace","HYPHENRANGE","HYPHENRANGELOOSE","STAR","i","parse","version","loose","length","r","test","er","valid","v","clean","s","trim","replace","TypeError","m","match","raw","major","minor","patch","prerelease","split","map","id","build","format","prototype","join","inspect","toString","compare","other","compareMain","comparePre","compareIdentifiers","a","b","undefined","inc","release","identifier","push","isNaN","Error","diff","version1","version2","eq","v1","v2","key","numeric","anum","bnum","rcompareIdentifiers","compareLoose","rcompare","sort","list","rsort","gt","lt","neq","gte","lte","cmp","op","ret","Comparator","comp","value","semver","ANY","operator","Range","range","set","parseRange","filter","c","comps","hr","hyphenReplace","compRe","parseComparator","toComparators","replaceCarets","replaceTildes","replaceXRanges","replaceStars","isX","toLowerCase","replaceTilde","_","M","p","pr","charAt","replaceCaret","replaceXRange","gtlt","xM","xm","xp","anyX","$0","from","fM","fm","fp","fpr","fb","to","tM","tm","tp","tpr","tb","testSet","allowed","satisfies","maxSatisfying","versions","validRange","ltr","outside","gtr","hilo","gtfn","ltefn","ltfn","ecomp","comparators","high","low","forEach","comparator","define","amd"],"sources":["C:/Users/Charles/Desktop/Projects/InstagramParody/instagram-frontend/node_modules/semver/semver.browser.js"],"sourcesContent":[";(function(exports) {\n\n// export the class if we are in a Node-like system.\nif (typeof module === 'object' && module.exports === exports)\n  exports = module.exports = SemVer;\n\n// The debug function is excluded entirely from the minified version.\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0';\n\nvar MAX_LENGTH = 256;\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\n// The actual regexps go on exports.re\nvar re = exports.re = [];\nvar src = exports.src = [];\nvar R = 0;\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\nvar NUMERICIDENTIFIER = R++;\nsrc[NUMERICIDENTIFIER] = '0|[1-9]\\\\d*';\nvar NUMERICIDENTIFIERLOOSE = R++;\nsrc[NUMERICIDENTIFIERLOOSE] = '[0-9]+';\n\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\nvar NONNUMERICIDENTIFIER = R++;\nsrc[NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*';\n\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\nvar MAINVERSION = R++;\nsrc[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[NUMERICIDENTIFIER] + ')';\n\nvar MAINVERSIONLOOSE = R++;\nsrc[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')';\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\nvar PRERELEASEIDENTIFIER = R++;\nsrc[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +\n                            '|' + src[NONNUMERICIDENTIFIER] + ')';\n\nvar PRERELEASEIDENTIFIERLOOSE = R++;\nsrc[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[NONNUMERICIDENTIFIER] + ')';\n\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\nvar PRERELEASE = R++;\nsrc[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[PRERELEASEIDENTIFIER] + ')*))';\n\nvar PRERELEASELOOSE = R++;\nsrc[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))';\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\nvar BUILDIDENTIFIER = R++;\nsrc[BUILDIDENTIFIER] = '[0-9A-Za-z-]+';\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\nvar BUILD = R++;\nsrc[BUILD] = '(?:\\\\+(' + src[BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[BUILDIDENTIFIER] + ')*))';\n\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\nvar FULL = R++;\nvar FULLPLAIN = 'v?' + src[MAINVERSION] +\n                src[PRERELEASE] + '?' +\n                src[BUILD] + '?';\n\nsrc[FULL] = '^' + FULLPLAIN + '$';\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\nvar LOOSEPLAIN = '[v=\\\\s]*' + src[MAINVERSIONLOOSE] +\n                 src[PRERELEASELOOSE] + '?' +\n                 src[BUILD] + '?';\n\nvar LOOSE = R++;\nsrc[LOOSE] = '^' + LOOSEPLAIN + '$';\n\nvar GTLT = R++;\nsrc[GTLT] = '((?:<|>)?=?)';\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\nvar XRANGEIDENTIFIERLOOSE = R++;\nsrc[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*';\nvar XRANGEIDENTIFIER = R++;\nsrc[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\\\*';\n\nvar XRANGEPLAIN = R++;\nsrc[XRANGEPLAIN] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[PRERELEASE] + ')?' +\n                   src[BUILD] + '?' +\n                   ')?)?';\n\nvar XRANGEPLAINLOOSE = R++;\nsrc[XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[PRERELEASELOOSE] + ')?' +\n                        src[BUILD] + '?' +\n                        ')?)?';\n\nvar XRANGE = R++;\nsrc[XRANGE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAIN] + '$';\nvar XRANGELOOSE = R++;\nsrc[XRANGELOOSE] = '^' + src[GTLT] + '\\\\s*' + src[XRANGEPLAINLOOSE] + '$';\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\nvar LONETILDE = R++;\nsrc[LONETILDE] = '(?:~>?)';\n\nvar TILDETRIM = R++;\nsrc[TILDETRIM] = '(\\\\s*)' + src[LONETILDE] + '\\\\s+';\nre[TILDETRIM] = new RegExp(src[TILDETRIM], 'g');\nvar tildeTrimReplace = '$1~';\n\nvar TILDE = R++;\nsrc[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$';\nvar TILDELOOSE = R++;\nsrc[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$';\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\nvar LONECARET = R++;\nsrc[LONECARET] = '(?:\\\\^)';\n\nvar CARETTRIM = R++;\nsrc[CARETTRIM] = '(\\\\s*)' + src[LONECARET] + '\\\\s+';\nre[CARETTRIM] = new RegExp(src[CARETTRIM], 'g');\nvar caretTrimReplace = '$1^';\n\nvar CARET = R++;\nsrc[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$';\nvar CARETLOOSE = R++;\nsrc[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$';\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\nvar COMPARATORLOOSE = R++;\nsrc[COMPARATORLOOSE] = '^' + src[GTLT] + '\\\\s*(' + LOOSEPLAIN + ')$|^$';\nvar COMPARATOR = R++;\nsrc[COMPARATOR] = '^' + src[GTLT] + '\\\\s*(' + FULLPLAIN + ')$|^$';\n\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\nvar COMPARATORTRIM = R++;\nsrc[COMPARATORTRIM] = '(\\\\s*)' + src[GTLT] +\n                      '\\\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')';\n\n// this one has to use the /g flag\nre[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g');\nvar comparatorTrimReplace = '$1$2$3';\n\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\nvar HYPHENRANGE = R++;\nsrc[HYPHENRANGE] = '^\\\\s*(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[XRANGEPLAIN] + ')' +\n                   '\\\\s*$';\n\nvar HYPHENRANGELOOSE = R++;\nsrc[HYPHENRANGELOOSE] = '^\\\\s*(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$';\n\n// Star ranges basically just allow anything at all.\nvar STAR = R++;\nsrc[STAR] = '(<|>)?=?\\\\s*\\\\*';\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  ;\n  if (!re[i])\n    re[i] = new RegExp(src[i]);\n}\n\nexports.parse = parse;\nfunction parse(version, loose) {\n  if (version.length > MAX_LENGTH)\n    return null;\n\n  var r = loose ? re[LOOSE] : re[FULL];\n  if (!r.test(version))\n    return null;\n\n  try {\n    return new SemVer(version, loose);\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.valid = valid;\nfunction valid(version, loose) {\n  var v = parse(version, loose);\n  return v ? v.version : null;\n}\n\n\nexports.clean = clean;\nfunction clean(version, loose) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), loose);\n  return s ? s.version : null;\n}\n\nexports.SemVer = SemVer;\n\nfunction SemVer(version, loose) {\n  if (version instanceof SemVer) {\n    if (version.loose === loose)\n      return version;\n    else\n      version = version.version;\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version);\n  }\n\n  if (version.length > MAX_LENGTH)\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n\n  if (!(this instanceof SemVer))\n    return new SemVer(version, loose);\n\n  ;\n  this.loose = loose;\n  var m = version.trim().match(loose ? re[LOOSE] : re[FULL]);\n\n  if (!m)\n    throw new TypeError('Invalid Version: ' + version);\n\n  this.raw = version;\n\n  // these are actually numbers\n  this.major = +m[1];\n  this.minor = +m[2];\n  this.patch = +m[3];\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0)\n    throw new TypeError('Invalid major version')\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0)\n    throw new TypeError('Invalid minor version')\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0)\n    throw new TypeError('Invalid patch version')\n\n  // numberify any prerelease numeric ids\n  if (!m[4])\n    this.prerelease = [];\n  else\n    this.prerelease = m[4].split('.').map(function(id) {\n      return (/^[0-9]+$/.test(id)) ? +id : id;\n    });\n\n  this.build = m[5] ? m[5].split('.') : [];\n  this.format();\n}\n\nSemVer.prototype.format = function() {\n  this.version = this.major + '.' + this.minor + '.' + this.patch;\n  if (this.prerelease.length)\n    this.version += '-' + this.prerelease.join('.');\n  return this.version;\n};\n\nSemVer.prototype.inspect = function() {\n  return '<SemVer \"' + this + '\">';\n};\n\nSemVer.prototype.toString = function() {\n  return this.version;\n};\n\nSemVer.prototype.compare = function(other) {\n  ;\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return this.compareMain(other) || this.comparePre(other);\n};\n\nSemVer.prototype.compareMain = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch);\n};\n\nSemVer.prototype.comparePre = function(other) {\n  if (!(other instanceof SemVer))\n    other = new SemVer(other, this.loose);\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length)\n    return -1;\n  else if (!this.prerelease.length && other.prerelease.length)\n    return 1;\n  else if (!this.prerelease.length && !other.prerelease.length)\n    return 0;\n\n  var i = 0;\n  do {\n    var a = this.prerelease[i];\n    var b = other.prerelease[i];\n    ;\n    if (a === undefined && b === undefined)\n      return 0;\n    else if (b === undefined)\n      return 1;\n    else if (a === undefined)\n      return -1;\n    else if (a === b)\n      continue;\n    else\n      return compareIdentifiers(a, b);\n  } while (++i);\n};\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function(release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor = 0;\n      this.major++;\n      this.inc('pre', identifier);\n      break;\n    case 'preminor':\n      this.prerelease.length = 0;\n      this.patch = 0;\n      this.minor++;\n      this.inc('pre', identifier);\n      break;\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0;\n      this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0)\n        this.inc('patch', identifier);\n      this.inc('pre', identifier);\n      break;\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0)\n        this.major++;\n      this.minor = 0;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0)\n        this.minor++;\n      this.patch = 0;\n      this.prerelease = [];\n      break;\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0)\n        this.patch++;\n      this.prerelease = [];\n      break;\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0)\n        this.prerelease = [0];\n      else {\n        var i = this.prerelease.length;\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++;\n            i = -2;\n          }\n        }\n        if (i === -1) // didn't increment anything\n          this.prerelease.push(0);\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1]))\n            this.prerelease = [identifier, 0];\n        } else\n          this.prerelease = [identifier, 0];\n      }\n      break;\n\n    default:\n      throw new Error('invalid increment argument: ' + release);\n  }\n  this.format();\n  return this;\n};\n\nexports.inc = inc;\nfunction inc(version, release, loose, identifier) {\n  if (typeof(loose) === 'string') {\n    identifier = loose;\n    loose = undefined;\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version;\n  } catch (er) {\n    return null;\n  }\n}\n\nexports.diff = diff;\nfunction diff(version1, version2) {\n  if (eq(version1, version2)) {\n    return null;\n  } else {\n    var v1 = parse(version1);\n    var v2 = parse(version2);\n    if (v1.prerelease.length || v2.prerelease.length) {\n      for (var key in v1) {\n        if (key === 'major' || key === 'minor' || key === 'patch') {\n          if (v1[key] !== v2[key]) {\n            return 'pre'+key;\n          }\n        }\n      }\n      return 'prerelease';\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return key;\n        }\n      }\n    }\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers;\n\nvar numeric = /^[0-9]+$/;\nfunction compareIdentifiers(a, b) {\n  var anum = numeric.test(a);\n  var bnum = numeric.test(b);\n\n  if (anum && bnum) {\n    a = +a;\n    b = +b;\n  }\n\n  return (anum && !bnum) ? -1 :\n         (bnum && !anum) ? 1 :\n         a < b ? -1 :\n         a > b ? 1 :\n         0;\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers;\nfunction rcompareIdentifiers(a, b) {\n  return compareIdentifiers(b, a);\n}\n\nexports.major = major;\nfunction major(a, loose) {\n  return new SemVer(a, loose).major;\n}\n\nexports.minor = minor;\nfunction minor(a, loose) {\n  return new SemVer(a, loose).minor;\n}\n\nexports.patch = patch;\nfunction patch(a, loose) {\n  return new SemVer(a, loose).patch;\n}\n\nexports.compare = compare;\nfunction compare(a, b, loose) {\n  return new SemVer(a, loose).compare(b);\n}\n\nexports.compareLoose = compareLoose;\nfunction compareLoose(a, b) {\n  return compare(a, b, true);\n}\n\nexports.rcompare = rcompare;\nfunction rcompare(a, b, loose) {\n  return compare(b, a, loose);\n}\n\nexports.sort = sort;\nfunction sort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.compare(a, b, loose);\n  });\n}\n\nexports.rsort = rsort;\nfunction rsort(list, loose) {\n  return list.sort(function(a, b) {\n    return exports.rcompare(a, b, loose);\n  });\n}\n\nexports.gt = gt;\nfunction gt(a, b, loose) {\n  return compare(a, b, loose) > 0;\n}\n\nexports.lt = lt;\nfunction lt(a, b, loose) {\n  return compare(a, b, loose) < 0;\n}\n\nexports.eq = eq;\nfunction eq(a, b, loose) {\n  return compare(a, b, loose) === 0;\n}\n\nexports.neq = neq;\nfunction neq(a, b, loose) {\n  return compare(a, b, loose) !== 0;\n}\n\nexports.gte = gte;\nfunction gte(a, b, loose) {\n  return compare(a, b, loose) >= 0;\n}\n\nexports.lte = lte;\nfunction lte(a, b, loose) {\n  return compare(a, b, loose) <= 0;\n}\n\nexports.cmp = cmp;\nfunction cmp(a, op, b, loose) {\n  var ret;\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a === b;\n      break;\n    case '!==':\n      if (typeof a === 'object') a = a.version;\n      if (typeof b === 'object') b = b.version;\n      ret = a !== b;\n      break;\n    case '': case '=': case '==': ret = eq(a, b, loose); break;\n    case '!=': ret = neq(a, b, loose); break;\n    case '>': ret = gt(a, b, loose); break;\n    case '>=': ret = gte(a, b, loose); break;\n    case '<': ret = lt(a, b, loose); break;\n    case '<=': ret = lte(a, b, loose); break;\n    default: throw new TypeError('Invalid operator: ' + op);\n  }\n  return ret;\n}\n\nexports.Comparator = Comparator;\nfunction Comparator(comp, loose) {\n  if (comp instanceof Comparator) {\n    if (comp.loose === loose)\n      return comp;\n    else\n      comp = comp.value;\n  }\n\n  if (!(this instanceof Comparator))\n    return new Comparator(comp, loose);\n\n  ;\n  this.loose = loose;\n  this.parse(comp);\n\n  if (this.semver === ANY)\n    this.value = '';\n  else\n    this.value = this.operator + this.semver.version;\n\n  ;\n}\n\nvar ANY = {};\nComparator.prototype.parse = function(comp) {\n  var r = this.loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var m = comp.match(r);\n\n  if (!m)\n    throw new TypeError('Invalid comparator: ' + comp);\n\n  this.operator = m[1];\n  if (this.operator === '=')\n    this.operator = '';\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2])\n    this.semver = ANY;\n  else\n    this.semver = new SemVer(m[2], this.loose);\n};\n\nComparator.prototype.inspect = function() {\n  return '<SemVer Comparator \"' + this + '\">';\n};\n\nComparator.prototype.toString = function() {\n  return this.value;\n};\n\nComparator.prototype.test = function(version) {\n  ;\n\n  if (this.semver === ANY)\n    return true;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  return cmp(version, this.operator, this.semver, this.loose);\n};\n\n\nexports.Range = Range;\nfunction Range(range, loose) {\n  if ((range instanceof Range) && range.loose === loose)\n    return range;\n\n  if (!(this instanceof Range))\n    return new Range(range, loose);\n\n  this.loose = loose;\n\n  // First, split based on boolean or ||\n  this.raw = range;\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function(range) {\n    return this.parseRange(range.trim());\n  }, this).filter(function(c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length;\n  });\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range);\n  }\n\n  this.format();\n}\n\nRange.prototype.inspect = function() {\n  return '<SemVer Range \"' + this.range + '\">';\n};\n\nRange.prototype.format = function() {\n  this.range = this.set.map(function(comps) {\n    return comps.join(' ').trim();\n  }).join('||').trim();\n  return this.range;\n};\n\nRange.prototype.toString = function() {\n  return this.range;\n};\n\nRange.prototype.parseRange = function(range) {\n  var loose = this.loose;\n  range = range.trim();\n  ;\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE];\n  range = range.replace(hr, hyphenReplace);\n  ;\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace);\n  ;\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[TILDETRIM], tildeTrimReplace);\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[CARETTRIM], caretTrimReplace);\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ');\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR];\n  var set = range.split(' ').map(function(comp) {\n    return parseComparator(comp, loose);\n  }).join(' ').split(/\\s+/);\n  if (this.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function(comp) {\n      return !!comp.match(compRe);\n    });\n  }\n  set = set.map(function(comp) {\n    return new Comparator(comp, loose);\n  });\n\n  return set;\n};\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators;\nfunction toComparators(range, loose) {\n  return new Range(range, loose).set.map(function(comp) {\n    return comp.map(function(c) {\n      return c.value;\n    }).join(' ').trim().split(' ');\n  });\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator(comp, loose) {\n  ;\n  comp = replaceCarets(comp, loose);\n  ;\n  comp = replaceTildes(comp, loose);\n  ;\n  comp = replaceXRanges(comp, loose);\n  ;\n  comp = replaceStars(comp, loose);\n  ;\n  return comp;\n}\n\nfunction isX(id) {\n  return !id || id.toLowerCase() === 'x' || id === '*';\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceTilde(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceTilde(comp, loose) {\n  var r = loose ? re[TILDELOOSE] : re[TILDE];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    ;\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p))\n      // ~1.2 == >=1.2.0- <1.3.0-\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    else if (pr) {\n      ;\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      ret = '>=' + M + '.' + m + '.' + p + pr +\n            ' <' + M + '.' + (+m + 1) + '.0';\n    } else\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0';\n\n    ;\n    return ret;\n  });\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets(comp, loose) {\n  return comp.trim().split(/\\s+/).map(function(comp) {\n    return replaceCaret(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceCaret(comp, loose) {\n  ;\n  var r = loose ? re[CARETLOOSE] : re[CARET];\n  return comp.replace(r, function(_, M, m, p, pr) {\n    ;\n    var ret;\n\n    if (isX(M))\n      ret = '';\n    else if (isX(m))\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    else if (isX(p)) {\n      if (M === '0')\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n      else\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0';\n    } else if (pr) {\n      ;\n      if (pr.charAt(0) !== '-')\n        pr = '-' + pr;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p + pr +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p + pr +\n              ' <' + (+M + 1) + '.0.0';\n    } else {\n      ;\n      if (M === '0') {\n        if (m === '0')\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1);\n        else\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0';\n      } else\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0';\n    }\n\n    ;\n    return ret;\n  });\n}\n\nfunction replaceXRanges(comp, loose) {\n  ;\n  return comp.split(/\\s+/).map(function(comp) {\n    return replaceXRange(comp, loose);\n  }).join(' ');\n}\n\nfunction replaceXRange(comp, loose) {\n  comp = comp.trim();\n  var r = loose ? re[XRANGELOOSE] : re[XRANGE];\n  return comp.replace(r, function(ret, gtlt, M, m, p, pr) {\n    ;\n    var xM = isX(M);\n    var xm = xM || isX(m);\n    var xp = xm || isX(p);\n    var anyX = xp;\n\n    if (gtlt === '=' && anyX)\n      gtlt = '';\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0';\n      } else {\n        // nothing is forbidden\n        ret = '*';\n      }\n    } else if (gtlt && anyX) {\n      // replace X with 0\n      if (xm)\n        m = 0;\n      if (xp)\n        p = 0;\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>=';\n        if (xm) {\n          M = +M + 1;\n          m = 0;\n          p = 0;\n        } else if (xp) {\n          m = +m + 1;\n          p = 0;\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm)\n          M = +M + 1\n        else\n          m = +m + 1\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p;\n    } else if (xm) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0';\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0';\n    }\n\n    ;\n\n    return ret;\n  });\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars(comp, loose) {\n  ;\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[STAR], '');\n}\n\n// This function is passed to string.replace(re[HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace($0,\n                       from, fM, fm, fp, fpr, fb,\n                       to, tM, tm, tp, tpr, tb) {\n\n  if (isX(fM))\n    from = '';\n  else if (isX(fm))\n    from = '>=' + fM + '.0.0';\n  else if (isX(fp))\n    from = '>=' + fM + '.' + fm + '.0';\n  else\n    from = '>=' + from;\n\n  if (isX(tM))\n    to = '';\n  else if (isX(tm))\n    to = '<' + (+tM + 1) + '.0.0';\n  else if (isX(tp))\n    to = '<' + tM + '.' + (+tm + 1) + '.0';\n  else if (tpr)\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr;\n  else\n    to = '<=' + to;\n\n  return (from + ' ' + to).trim();\n}\n\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function(version) {\n  if (!version)\n    return false;\n\n  if (typeof version === 'string')\n    version = new SemVer(version, this.loose);\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version))\n      return true;\n  }\n  return false;\n};\n\nfunction testSet(set, version) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version))\n      return false;\n  }\n\n  if (version.prerelease.length) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (var i = 0; i < set.length; i++) {\n      ;\n      if (set[i].semver === ANY)\n        return true;\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver;\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch)\n          return true;\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false;\n  }\n\n  return true;\n}\n\nexports.satisfies = satisfies;\nfunction satisfies(version, range, loose) {\n  try {\n    range = new Range(range, loose);\n  } catch (er) {\n    return false;\n  }\n  return range.test(version);\n}\n\nexports.maxSatisfying = maxSatisfying;\nfunction maxSatisfying(versions, range, loose) {\n  return versions.filter(function(version) {\n    return satisfies(version, range, loose);\n  }).sort(function(a, b) {\n    return rcompare(a, b, loose);\n  })[0] || null;\n}\n\nexports.validRange = validRange;\nfunction validRange(range, loose) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, loose).range || '*';\n  } catch (er) {\n    return null;\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr;\nfunction ltr(version, range, loose) {\n  return outside(version, range, '<', loose);\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr;\nfunction gtr(version, range, loose) {\n  return outside(version, range, '>', loose);\n}\n\nexports.outside = outside;\nfunction outside(version, range, hilo, loose) {\n  version = new SemVer(version, loose);\n  range = new Range(range, loose);\n\n  var gtfn, ltefn, ltfn, comp, ecomp;\n  switch (hilo) {\n    case '>':\n      gtfn = gt;\n      ltefn = lte;\n      ltfn = lt;\n      comp = '>';\n      ecomp = '>=';\n      break;\n    case '<':\n      gtfn = lt;\n      ltefn = gte;\n      ltfn = gt;\n      comp = '<';\n      ecomp = '<=';\n      break;\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"');\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, loose)) {\n    return false;\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i];\n\n    var high = null;\n    var low = null;\n\n    comparators.forEach(function(comparator) {\n      high = high || comparator;\n      low = low || comparator;\n      if (gtfn(comparator.semver, high.semver, loose)) {\n        high = comparator;\n      } else if (ltfn(comparator.semver, low.semver, loose)) {\n        low = comparator;\n      }\n    });\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false;\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false;\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Use the define() function if we're in AMD land\nif (typeof define === 'function' && define.amd)\n  define(exports);\n\n})(\n  typeof exports === 'object' ? exports :\n  typeof define === 'function' && define.amd ? {} :\n  semver = {}\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}